)
)
)
)
shinyApp(ui, server = function(input, output, session) {
output$image <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/wordcloud.png", width = 1200)
}
, deleteFile = FALSE)
output$image2 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/mostCommonWords.png", width = 1200)
}
, deleteFile = FALSE)
output$image3 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/scoreSIA.png")
}
, deleteFile = FALSE)
})
## ui code starts here
ui <- fluidPage(
dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem('Analyse de sentiments', tabName = "Sarah")
)
),
dashboardBody(
tabItem(
tabName = "Sarah",
tabsetPanel(tabPanel("WordCloud",tabPanelBody(imageOutput('image'))), tabPanel("Occurrence_mots",imageOutput('image2')), tabPanel("Sentiment_analysis", imageOutput('image3')))
)
)
)
)
## Demo - add logo (icon or image)in the shinydashboard header (left side)
# load the required packages
library(shiny)
library(shinydashboard)
## ui code starts here
ui <- fluidPage(
dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem('Analyse de sentiments', tabName = "Sarah")
)
),
dashboardBody(
tabItem(
tabName = "Sarah",
tabsetPanel(tabPanel("WordCloud",tabSetPanel(imageOutput('image'))), tabPanel("Occurrence_mots",imageOutput('image2')), tabPanel("Sentiment_analysis", imageOutput('image3')))
)
)
)
)
shinyApp(ui, server = function(input, output, session) {
output$image <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/wordcloud.png", width = 1200)
}
, deleteFile = FALSE)
output$image2 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/mostCommonWords.png", width = 1200)
}
, deleteFile = FALSE)
output$image3 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/scoreSIA.png")
}
, deleteFile = FALSE)
})
## Demo - add logo (icon or image)in the shinydashboard header (left side)
# load the required packages
library(shiny)
library(shinydashboard)
## ui code starts here
ui <- fluidPage(
dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem('Analyse de sentiments', tabName = "Sarah")
)
),
dashboardBody(
tabItem(
tabName = "Sarah",
tabsetPanel(tabPanel("WordCloud",tabsetPanel(imageOutput('image'))), tabPanel("Occurrence_mots",imageOutput('image2')), tabPanel("Sentiment_analysis", imageOutput('image3')))
)
)
)
)
shinyApp(ui, server = function(input, output, session) {
output$image <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/wordcloud.png", width = 1200)
}
, deleteFile = FALSE)
output$image2 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/mostCommonWords.png", width = 1200)
}
, deleteFile = FALSE)
output$image3 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/scoreSIA.png")
}
, deleteFile = FALSE)
})
## Demo - add logo (icon or image)in the shinydashboard header (left side)
# load the required packages
library(shiny)
library(shinydashboard)
## ui code starts here
ui <- fluidPage(
dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem('Analyse de sentiments', tabName = "Sarah")
)
),
dashboardBody(
tabItem(
tabName = "Sarah",
tabsetPanel(tabPanel("WordCloud",imageOutput('image')), tabPanel("Occurrence_mots",imageOutput('image2')), tabPanel("Sentiment_analysis", imageOutput('image3')))
)
)
)
)
shinyApp(ui, server = function(input, output, session) {
output$image <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/wordcloud.png", width = 1200)
}
, deleteFile = FALSE)
output$image2 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/mostCommonWords.png", width = 1200)
}
, deleteFile = FALSE)
output$image3 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/scoreSIA.png")
}
, deleteFile = FALSE)
})
## Demo - add logo (icon or image)in the shinydashboard header (left side)
# load the required packages
library(shiny)
library(shinydashboard)
## ui code starts here
ui <- fluidPage(
dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem('Analyse de sentiments', tabName = "Sarah")
)
),
dashboardBody(
tabItem(
tabName = "Sarah",
tabsetPanel(tabPanel("WordCloud",imageOutput('image')), tabPanel("Occurrence_mots",imageOutput('image2')), tabPanel("Sentiment_analysis", imageOutput('image3')))
)
)
)
)
shinyApp(ui, server = function(input, output, session) {
output$image <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/wordcloud2.png", width = 1200)
}
, deleteFile = FALSE)
output$image2 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/mostCommonWords.png", width = 1200)
}
, deleteFile = FALSE)
output$image3 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/scoreSIA.png")
}
, deleteFile = FALSE)
})
## Demo - add logo (icon or image)in the shinydashboard header (left side)
# load the required packages
library(shiny)
library(shinydashboard)
## ui code starts here
ui <- fluidPage(
dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem('Analyse de sentiments', tabName = "Sarah")
)
),
dashboardBody(
tabItem(
tabName = "Sarah",
tabsetPanel(tabPanel("WordCloud",imageOutput('image')), tabPanel("Occurrence_mots",imageOutput('image2')), tabPanel("Sentiment_analysis", imageOutput('image3')))
)
)
)
)
shinyApp(ui, server = function(input, output, session) {
output$image <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/wordcloud2.png", width = 1200)
}
, deleteFile = FALSE)
output$image2 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/mostCommonWords2.png", width = 1200)
}
, deleteFile = FALSE)
output$image3 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/scoreSIA.png")
}
, deleteFile = FALSE)
})
## Demo - add logo (icon or image)in the shinydashboard header (left side)
# load the required packages
library(shiny)
library(shinydashboard)
## ui code starts here
ui <- fluidPage(
dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem('Analyse de sentiments', tabName = "Sarah")
)
),
dashboardBody(
tabItem(
tabName = "Sarah",
tabsetPanel(tabPanel("WordCloud",imageOutput('image')), tabPanel("Occurrence_mots",imageOutput('image2')), tabPanel("Sentiment_analysis", imageOutput('image3')))
)
)
)
)
shinyApp(ui, server = function(input, output, session) {
output$image <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/wordcloud2.png", width = 1200)
}
, deleteFile = FALSE)
output$image2 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/mostCommonWords3.png", width = 1200)
}
, deleteFile = FALSE)
output$image3 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/scoreSIA.png")
}
, deleteFile = FALSE)
})
## Demo - add logo (icon or image)in the shinydashboard header (left side)
# load the required packages
library(shiny)
library(shinydashboard)
## ui code starts here
ui <- fluidPage(
dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem('Analyse de sentiments', tabName = "Sarah")
)
),
dashboardBody(
tabItem(
tabName = "Sarah",
tabsetPanel(tabPanel("WordCloud",imageOutput('image')), tabPanel("Occurrence_mots",imageOutput('image2')), tabPanel("Sentiment_analysis", imageOutput('image3')))
)
)
)
)
shinyApp(ui, server = function(input, output, session) {
output$image <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/wordcloud2.png", width = 1200)
}
, deleteFile = FALSE)
output$image2 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/mostCommonWords2.png", width = 1200)
}
, deleteFile = FALSE)
output$image3 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/scoreSIA.png")
}
, deleteFile = FALSE)
})
## Demo - add logo (icon or image)in the shinydashboard header (left side)
# load the required packages
library(shiny)
library(shinydashboard)
## ui code starts here
ui <- fluidPage(
dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem('Analyse de sentiments', tabName = "Sarah")
)
),
dashboardBody(
tabItem(
tabName = "Sarah",
tabsetPanel(tabPanel("WordCloud",imageOutput('image')), tabPanel("Occurrence_mots",imageOutput('image2')), tabPanel("Sentiment_analysis", imageOutput('image3')))
)
)
)
)
shinyApp(ui, server = function(input, output, session) {
output$image <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/wordcloud2.png", width = 1200)
}
, deleteFile = FALSE)
output$image2 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/mostCommonWords2.png", width = 1200)
}
, deleteFile = FALSE)
output$image3 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/scoreSIA.png")
}
, deleteFile = FALSE)
})
## Demo - add logo (icon or image)in the shinydashboard header (left side)
# load the required packages
library(shiny)
library(shinydashboard)
## ui code starts here
ui <- fluidPage(
dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem('Analyse de sentiments', tabName = "Sarah")
)
),
dashboardBody(
tabItem(
tabName = "Sarah",
tabsetPanel(tabPanel("WordCloud",imageOutput('image')), tabPanel("Occurrence_mots",imageOutput('image2')), tabPanel("Sentiment_analysis", imageOutput('image3')))
)
)
)
)
shinyApp(ui, server = function(input, output, session) {
output$image <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/wordcloud2.png", width = 1200)
}
, deleteFile = FALSE)
output$image2 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/mostCommonWords2.png", width = 1200)
}
, deleteFile = FALSE)
output$image3 <- renderImage(
{
list(src = "/home/formateur/Documents/GitHub/Me/www/scoreSIA.png")
}
, deleteFile = FALSE)
})
#text =  paste(descr, collapse='')
text = toString(descr)
library(mongolite)
library(tidyverse)
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
myco <- mongo("PE_grp3", url=paste("mongodb://",user,":",password,"@127.0.0.1/Datalab2020?authSource=admin",sep =""))
user = 'scantonnet'
password = 'd}#2uyKYL}4e'
myco <- mongo("PE_grp3", url=paste("mongodb://",user,":",password,"@127.0.0.1/Datalab2020?authSource=admin",sep =""))
descr = myco$aggregate('[{"$project": {"_id" :0, "description": 1} }]')
#text =  paste(descr, collapse='')
text = toString(descr)
#text =  paste(descr, collapse='')
text = paste(descr, sep =' ')
#text =  paste(descr, collapse='')
text = paste(descr, sep ='"')
#text =  paste(descr, collapse='')
text = paste(descr, sep ='"', collapse = NULL)
#text =  paste(descr, collapse='')
text = paste(descr, sep ='"', collapse = " ")
text = toString(text, width = NULL)
# setwd("C:/Users/Ga/Documents/GitHub/jobio_grp3")
setwd("/home/formateur/Documents/GitHub/jobio_grp3")
library(mongolite)
library(tidyverse)
library(yaml)
library(ggplot2)
# setwd("C:/Users/Ga/Documents/GitHub/jobio_grp3")
setwd("/home/formateur/Documents/GitHub/jobio_grp3")
yml <- yaml.load_file("config.yml")
user = yml$poleEmp$user
password = yml$poleEmp$psswd
bdd = yml$poleEmp$bdd
myco <- mongo("offres", url=paste("mongodb://",user,":",password,"@127.0.0.1/",bdd,"?authSource=admin",sep =""))
#df avec tous les contrats
contrat = myco$aggregate('[{"$project": {"_id" :0, "natureContrat": 1} }]')
#group by natureContrat
contrat2 = myco$aggregate('[{"$project": {"_id" :0, "natureContrat": 1}},{"$group" : {"_id":"$natureContrat", "nbContrats" : {"$sum" : 1}}}]')
names(contrat2)[1] = "nomContrat"
p<-ggplot(data=contrat2, aes(x=nomContrat, y=nbContrats)) +
geom_bar(stat = "identity", width = 0.5)
p
library(mongolite)
library(tidyverse)
library(yaml)
library(ggplot2)
# setwd("C:/Users/Ga/Documents/GitHub/jobio_grp3")
setwd("/home/formateur/Documents/GitHub/jobio_grp3")
yml <- yaml.load_file("config.yml")
user = yml$poleEmp$user
password = yml$poleEmp$psswd
bdd = yml$poleEmp$bdd
myco <- mongo("offres", url=paste("mongodb://",user,":",password,"@127.0.0.1/",bdd,"?authSource=admin",sep =""))
#df avec tous les contrats
contrat = myco$aggregate('[{"$project": {"_id" :0, "natureContrat": 1} }]')
#group by natureContrat
contrat2 = myco$aggregate('[{"$project": {"_id" :0, "natureContrat": 1}},{"$group" : {"_id":"$natureContrat", "nbContrats" : {"$sum" : 1}}}]')
names(contrat2)[1] = "nomContrat"
p<-ggplot(data=contrat2, aes(x=nomContrat, y=nbContrats)) +
geom_bar(stat = "identity", width = 0.5)
p
#group by natureContrat
contrat2 = myco$aggregate('[{"$project": {"_id" :0, "typeContrat": 1}},{"$group" : {"_id":"$natureContrat", "nbContrats" : {"$sum" : 1}}}]')
names(contrat2)[1] = "nomContrat"
p<-ggplot(data=contrat2, aes(x=nomContrat, y=nbContrats)) +
geom_bar(stat = "identity", width = 0.5)
p
#group by natureContrat
contrat2 = myco$aggregate('[{"$project": {"_id" :0, "typeContrat": 1}},{"$group" : {"_id":"$typeContrat", "nbContrats" : {"$sum" : 1}}}]')
View(contrat2)
names(contrat2)[1] = "nomContrat"
p<-ggplot(data=contrat2, aes(x=nomContrat, y=nbContrats)) +
geom_bar(stat = "identity", width = 0.5)
p
library(devtools)
install.packages('esquisse')
esquisse:::esquisser()
esquisse:::esquisser()
#group by natureContrat
contrat2 = myco$aggregate('[{"$project": {"_id" :0, "typeContrat": 1}},{"$group" : {"_id":"$typeContrat", "nbContrats" : {"$sum" : 1}}}]')
data(contrat2)
View(contrat2)
exp = myco$aggregate('[{"$project": {"_id" :0, "experienceLibelle": 1} }]')
View(exp)
View(exp)
View(contrat2)
exp2 = myco$aggregate('[{"$project": {"_id" :0, "experienceLibelle": 1}},{"$group" : {"_id":"$experienceLibelle", "expExigee" : {"$sum" : 1}}}]')
View(exp2)
exp3 = myco$aggregate('[{"$project": {"_id" :0, "experienceExigee": 1} }]')
View(exp3)
exp3 = myco$aggregate('[{"$project": {"_id" :0, "experienceExige": 1} }]')
View(exp3)
exp4 = myco$aggregate('[{"$project": {"_id" :0, "experienceExige": 1}},{"$group" : {"_id":"$experienceExige", "expExigee" : {"$sum" : 1}}}]')
View(exp4)
exp4 = myco$aggregate('[{"$project": {"_id" :0, "experienceExige": 1}},{"$group" : {"_id":"$experienceExige", "nbExpExigee" : {"$sum" : 1}}}]')
names(exp4)[1] = "expExigee"
exp4$expExigee = c('Expérience souhaitée', 'Débutants acceptés', 'Expérience exigée')
esquisse:::esquisser()
esquisse:::esquisser()
library(mongolite)
library(tidyverse)
library(yaml)
library(ggplot2)
# setwd("C:/Users/Ga/Documents/GitHub/jobio_grp3")
setwd("/home/formateur/Documents/GitHub/jobio_grp3")
yml <- yaml.load_file("config.yml")
user = yml$poleEmp$user
password = yml$poleEmp$psswd
bdd = yml$poleEmp$bdd
myco <- mongo("offres", url=paste("mongodb://",user,":",password,"@127.0.0.1/",bdd,"?authSource=admin",sep =""))
#df avec tous les contrats
contrat = myco$aggregate('[{"$project": {"_id" :0, "typeContrat": 1} }]')
#group by natureContrat
contrat2 = myco$aggregate('[{"$project": {"_id" :0, "typeContrat": 1}},{"$group" : {"_id":"$typeContrat", "nbContrats" : {"$sum" : 1}}}]')
#On renomme la colonne _id
names(contrat2)[1] = "nomContrat"
p<-ggplot(data=contrat2, aes(x=nomContrat, y=nbContrats)) +
geom_bar(stat = "identity", width = 0.5)
p
# -------------------
exp = myco$aggregate('[{"$project": {"_id" :0, "experienceLibelle": 1} }]')
exp2 = myco$aggregate('[{"$project": {"_id" :0, "experienceLibelle": 1}},{"$group" : {"_id":"$experienceLibelle", "expExigee" : {"$sum" : 1}}}]')
exp3 = myco$aggregate('[{"$project": {"_id" :0, "experienceExige": 1} }]')
exp4 = myco$aggregate('[{"$project": {"_id" :0, "experienceExige": 1}},{"$group" : {"_id":"$experienceExige", "nbExpExigee" : {"$sum" : 1}}}]')
names(exp4)[1] = "expExigee"
exp4$expExigee = c('Expérience souhaitée', 'Débutants acceptés', 'Expérience exigée')
esquisse:::esquisser()
install.packages('htmlwidgets')
install.packages("htmlwidgets")
