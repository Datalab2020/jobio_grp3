vals = c(21, 1264, 3281,28)
)
waffle(parts, rows = 8)
waffle(exp2, rows = 8)
10
exp2 <- data.frame(
expExigee = c('A', 'B', 'C','D'),
vals = c(10, 20, 30,80)
)
waffle(exp2, rows = 8)
exp2 <- data.frame(
expExigee = c('A', 'B', 'C','D'),
vals = c(21, 1264, 3281 ,80)
)
waffle(exp2, rows = 8)
exp2 <- data.frame(
expExigee = c('A', 'B', 'C','D'),
vals = c(20, 1260, 3280 ,80)
)
waffle(exp2, rows = 8)
exp2 <- data.frame(
expExigee = c('A', 'B', 'C','D'),
vals = c(20, 12,60, 32,80 ,80)
)
exp2 <- data.frame(
expExigee = c('A', 'B', 'C','D'),
vals = c(20, 12.60, 32.80 ,80)
)
waffle(exp2, rows = 8)
exp2 <- data.frame(
expExigee = c('A', 'B', 'C','D'),
vals = c(0.20, 1.20, 8.3 ,0.8)
)
waffle(exp2, rows = 8)
exp$percentage <- exp$nbExpExigee/(sum(exp$nbExpExigee)/2)
exp$percentage <- exp$nbExpExigee/(sum(exp$nbExpExigee))
View(exp)
exp$percentage <- (exp$nbExpExigee/(sum(exp$nbExpExigee))*100)
waffle(exp, rows = 3)
exp$percentage %>% mutate(across(is.numeric, ~ round(., 2)))
View(exp)
exp$percentage <- round((exp$nbExpExigee/(sum(exp$nbExpExigee))*100), digits = 2)
waffle(exp, rows = 3)
waffle([exp$expExigee, exp$percentage], rows = 3)
exp2 = exp
View(exp2)
exp2 = exp[expExigee,"percentage"]
exp2 = exp["expExigee","percentage"]
exp2 = exp$expExigee,exp$percentage
exp2 = exp[expExigee,percentage]
exp2 = select(exp,expExigee,percentage)
waffle(exp2, rows = 3)
waffle(exp2, rows = 6)
exp = myco$aggregate('[{"$project": {"_id" :0, "experienceExige": 1}},{"$group" : {"_id":"$experienceExige", "nbExpExigee" : {"$sum" : 1}}}]')
names(exp)[1] = "expExigee"
exp$expExigee = c('Expérience souhaitée', 'Débutants acceptés', 'Expérience exigée')
bp<- ggplot(exp, aes(x="", y=nbExpExigee, fill=expExigee))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
bp
pie <- ggplot(exp, aes(x="", y=nbExpExigee, fill=expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(y = nbExpExigee/3 + c(0, cumsum(nbExpExigee)[-length(nbExpExigee)]),
label = percent(nbExpExigee/300 )), size=5)
pie
pie <- ggplot(exp, aes(x="", y=nbExpExigee, fill=expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
pie
waffle(exp2 *10, rows = 6)
waffle(exp2 /10, rows = 6)
waffle(exp2 / 10, rows = 6)
pie + scale_fill_grey() +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = value/3 + c(0, cumsum(value)[-length(value)]),
label = percent(value/100)), size=5)
pie + scale_fill_grey() +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = nbExpExigee/3 + c(0, cumsum(nbExpExigee)[-length(nbExpExigee)]),
label = percent(nbExpExigee/100)), size=5)
pie + scale_fill_grey() +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = nbExpExigee/3 + c(0, cumsum(nbExpExigee)[-length(nbExpExigee)]),
label = percent(nbExpExigee/1000)), size=5)
pie + scale_fill_grey() +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = nbExpExigee/0.3 + c(0, cumsum(nbExpExigee)[-length(nbExpExigee)]),
label = percent(nbExpExigee/100)), size=5)
pie + scale_fill_grey() +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = nbExpExigee/300 + c(0, cumsum(nbExpExigee)[-length(nbExpExigee)]),
label = percent(nbExpExigee/100)), size=5)
pie + scale_fill_grey() +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = nbExpExigee/30 + c(0, cumsum(nbExpExigee)[-length(nbExpExigee)]),
label = percent(nbExpExigee/100)), size=5)
pie + scale_fill_grey() +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = nbExpExigee/30 + c(0, cumsum(nbExpExigee)[-length(nbExpExigee)]),
label = percent(nbExpExigee/100)), size=5)
pie + scale_fill_grey() +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = nbExpExigee/3 + c(0, cumsum(nbExpExigee)[-length(nbExpExigee)]),
label = percent(nbExpExigee/10000)), size=5)
pie + scale_fill_grey() +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = nbExpExigee/3 + c(0, cumsum(nbExpExigee)[-length(nbExpExigee)]),
label = percent(nbExpExigee/1000)), size=5)
pie + scale_fill_brewer("Blues") +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = nbExpExigee/3 + c(0, cumsum(nbExpExigee)[-length(nbExpExigee)]),
label = percent(nbExpExigee/1000)), size=5)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
pie + scale_fill_brewer("Blues") + blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = nbExpExigee/3 + c(0, cumsum(nbExpExigee)[-length(nbExpExigee)]),
label = percent(nbExpExigee/1000)), size=5)
expPer <- exp %>%
mutate(expExigee = factor(expExigee,
levels = expExigee[length(expExigee):1]),
cumulative = cumsum(nbExpExigee),
midpoint = cumulative - nbExpExigee / 2,
labels = paste0(round((nbExpExigee/ sum(nbExpExigee)) * 100, 1), "%"))
View(expPer)
ggplot(expPer, aes(x = "", y = nbExpExigee, fill = expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
scale_fill_manual(values = c("Blue", "Red", "Green", "Orange")) +
labs(x = "", y = "", title = "Favourite Food Survey \n",
fill = "Food Choices") +
geom_text(aes(x = 1.2, y = midpoint , label = labels), color="black",
fontface = "bold") +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5, face="bold", size = 10))
ggplot(expPer, aes(x = "", y = nbExpExigee, fill = expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
labs(x = "", y = "", title = "Favourite Food Survey \n",
fill = "Food Choices") +
geom_text(aes(x = 1.2, y = midpoint , label = labels), color="black",
fontface = "bold") +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5, face="bold", size = 10))
ggplot(expPer, aes(x = "", y = nbExpExigee, fill = expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
labs(x = "", y = "", title = "Répartition expérience \n",
fill = "Food Choices") +
geom_text(aes(x = 1.2, y = midpoint , label = labels), color="black",
fontface = "bold") +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5, face="bold", size = 10))
ggplot(expPer, aes(x = "", y = nbExpExigee, fill = expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
labs(x = "", y = "", title = "Répartition expérience \n",
fill = "Légende") +
geom_text(aes(x = 1.2, y = midpoint , label = labels), color="black",
fontface = "bold") +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5, face="bold", size = 10))
ggplot(expPer, aes(x = "", y = nbExpExigee, fill = expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
labs(x = "", y = "", title = "Répartition expérience \n",
fill = "Légende") +
geom_text(aes(x = 1.2, y = midpoint , label = labels), color="black",
fontface = "bold") +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5, face="bold", size = 10)) + theme_minimal()
ggplot(expPer, aes(x = "", y = nbExpExigee, fill = expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
labs(x = "", y = "", title = "Répartition expérience \n",
fill = "Légende") +
geom_text(aes(x = 1.2, y = midpoint , label = labels), color="black",
fontface = "bold") + theme_minimal()
ggplot(expPer, aes(x = "", y = nbExpExigee, fill = expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
labs(x = "", y = "", title = "Répartition expérience \n",
fill = "Légende") +
geom_text(aes(x = 1.2, y = midpoint , label = labels), color="black",
fontface = "bold") + blank_theme
ggplot(expPer, aes(x = "", y = nbExpExigee, fill = expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
labs(x = "", y = "", title = "Répartition expérience \n",
fill = "Légende") +
geom_text(aes(x = 1.2, y = midpoint , label = labels), color="black",
fontface = "bold") + blank_theme +
scale_fill_brewer(palette="Blues")
ggplot(expPer, aes(x = "", y = nbExpExigee, fill = expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
labs(x = "", y = "", title = "Répartition expérience \n",
fill = "Légende") +
geom_text(aes(x = 1.2, y = midpoint , label = labels), color="black",
fontface = "bold") + blank_theme +
scale_fill_brewer(palette="Blues")+
theme(axis.text.x=element_blank()) +
# -------------------------
waffle::waffle(vals) +
ggthemes::scale_fill_tableau(name=NULL)
ggplot(expPer, aes(x = "", y = nbExpExigee, fill = expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
labs(x = "", y = "", title = "Répartition expérience \n",
fill = "Légende") +
geom_text(aes(x = 1.2, y = midpoint , label = labels), color="black",
fontface = "bold") + blank_theme +
scale_fill_brewer(palette="Blues")+
theme(axis.text.x=element_blank())
exp = myco$aggregate('[{"$project": {"_id" :0, "experienceExige": 1}},{"$group" : {"_id":"$experienceExige", "nbExpExigee" : {"$sum" : 1}}}]')
names(exp)[1] = "expExigee"
exp$expExigee = c('Expérience souhaitée', 'Débutants acceptés', 'Expérience exigée')
bp<- ggplot(exp, aes(x="", y=nbExpExigee, fill=expExigee))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
pie <- ggplot(exp, aes(x="", y=nbExpExigee, fill=expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# 100 * exp$nb / expTotal
expPer <- exp %>%
mutate(expExigee = factor(expExigee,
levels = expExigee[length(expExigee):1]),
cumulative = cumsum(nbExpExigee),
midpoint = cumulative - nbExpExigee / 2,
labels = paste0(round((nbExpExigee/ sum(nbExpExigee)) * 100, 1), "%"))
ggplot(expPer, aes(x = "", y = nbExpExigee, fill = expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
labs(x = "", y = "", title = "Répartition expérience demandée \n",
fill = "Légende") +
geom_text(aes(x = 1.2, y = midpoint , label = labels), color="black",
fontface = "bold") + blank_theme +
scale_fill_brewer(palette="Blues")+
theme(axis.text.x=element_blank())
waffle::waffle(vals) +
ggthemes::scale_fill_tableau(name=NULL)
salaire2 = myco$aggregate('[{"$addFields": {"salaireLib": "$salaire.libelle"}},{"$project": {"_id" :0, "salaireLib": 1}},{"$group" : {"_id":"$salaireLib", "groupe" : {"$sum" : 1}}}]')
salaire = myco$aggregate('[{"$addFields": {"salaireLib": "$salaire.libelle"}},{"$project": {"_id" :0, "salaireLib": 1}},{"$group" : {"_id":"$salaireLib", "groupe" : {"$sum" : 1}}}]')
View(salaire)
salaire2 = myco$aggregate('[{"$addFields": {"salaireLib": "$salaire.libelle"}},{"$project": {"_id" :0, "salaireLib": 1} }]')
View(salaire2)
waffle(salaire, rows = 6)
names(salaire)[1] = "group"
waffle(salaire, rows = 6)
names(salaire)[1] = "salaire"
names(salaire)[2] = "nbSal"
noNa = sum(salaire$nbSal)
which(is.na(salaire$salaire))
indexNA = which(is.na(salaire$salaire))
noNa = sum(salaire$nbSal) - salaire[indexNA]
noNa = sum(salaire$nbSal) - salaire$salaire[indexNA]
which(is.na(salaire$salaire))
noNa = noNa - salaire$salaire[indexNA]
salaire$salaire[indexNA]
noNa = noNa - salaire$nbSal[indexNA]
salaire$nbSal[indexNA]
noNa = sum(salaire$nbSal)
noNa = sum(salaire$nbSal) - salaire$nbSal[indexNA]
noSalaire = salaire$nbSal[indexNA]
salaireOK = sum(salaire$nbSal) - noSalaire
total = sum(salaire$nbSal)
perNoSal = 100 * noSalaire / nbOffres # Pourcentage
nbOffres = sum(salaire$nbSal) # nombre total d'offres
indexNA = which(is.na(salaire$salaire)) # On cherche l'index du décompte de valeurs nulles
noSalaire = salaire$nbSal[indexNA] # Total des offres dont le salaire n'est pas renseigné
perNoSal = 100 * noSalaire / nbOffres # Pourcentage
contrat = myco$aggregate('[{"$project": {"_id" :0, "typeContrat": 1}},{"$group" : {"_id":"$typeContrat", "nbContrats" : {"$sum" : 1}}}]')
#On renomme la colonne _id
names(contrat)[1] = "nomContrat"
#barplot contrats
p<-ggplot(data=contrat, aes(x=nomContrat, y=nbContrats, fill = nomContrat)) +
geom_bar(stat = "identity", width = 0.8)+
geom_text(aes(label=nbContrats), vjust=-0.3, size=3.5)+
theme_minimal()
p
exp = myco$aggregate('[{"$project": {"_id" :0, "experienceExige": 1}},{"$group" : {"_id":"$experienceExige", "nbExpExigee" : {"$sum" : 1}}}]')
names(exp)[1] = "expExigee"
exp$expExigee = c('Expérience souhaitée', 'Débutants acceptés', 'Expérience exigée')
bp<- ggplot(exp, aes(x="", y=nbExpExigee, fill=expExigee))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
pie <- ggplot(exp, aes(x="", y=nbExpExigee, fill=expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# 100 * exp$nb / expTotal
expPer <- exp %>%
mutate(expExigee = factor(expExigee,
levels = expExigee[length(expExigee):1]),
cumulative = cumsum(nbExpExigee),
midpoint = cumulative - nbExpExigee / 2,
labels = paste0(round((nbExpExigee/ sum(nbExpExigee)) * 100, 1), "%"))
ggplot(expPer, aes(x = "", y = nbExpExigee, fill = expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
labs(x = "", y = "", title = "Répartition expérience demandée \n",
fill = "Légende") +
geom_text(aes(x = 1.2, y = midpoint , label = labels), color="black",
fontface = "bold") + blank_theme +
scale_fill_brewer(palette="Blues")+
theme(axis.text.x=element_blank())
salaire = myco$aggregate('[{"$addFields": {"salaireLib": "$salaire.libelle"}},{"$project": {"_id" :0, "salaireLib": 1}},{"$group" : {"_id":"$salaireLib", "groupe" : {"$sum" : 1}}}]')
names(salaire)[1] = "salaire"
names(salaire)[2] = "nbSal"
salaire2 = myco$aggregate('[{"$addFields": {"salaireLib": "$salaire.libelle"}},{"$project": {"_id" :0, "salaireLib": 1} }]')
nbOffres = sum(salaire$nbSal) # nombre total d'offres
indexNA = which(is.na(salaire$salaire)) # On cherche l'index du décompte de valeurs nulles
noSalaire = salaire$nbSal[indexNA] # Total des offres dont le salaire n'est pas renseigné
perNoSal = 100 * noSalaire / nbOffres # Pourcentage
# salaireOK = sum(salaire$nbSal) - noSalaire Offres dont le salaire est indiqué
perNoSal = round((100 * noSalaire / nbOffres), digits = 0) # Pourcentage
unused_packages()
library(mongolite)
library(tidyverse)
library(yaml)
library(ggplot2)
# library(scales)
library(dplyr)
setwd("C:/Users/Ga/Documents/GitHub/jobio_grp3")
# setwd("/home/formateur/Documents/GitHub/jobio_grp3")
yml <- yaml.load_file("config.yml")
user = yml$poleEmp$user
password = yml$poleEmp$psswd
bdd = yml$poleEmp$bdd
myco <- mongo("offres", url=paste("mongodb://",user,":",password,"@127.0.0.1/",bdd,"?authSource=admin",sep =""))
#--------------------------- Bar chart types de contrats
contrat = myco$aggregate('[{"$project": {"_id" :0, "typeContrat": 1}},{"$group" : {"_id":"$typeContrat", "nbContrats" : {"$sum" : 1}}}]')
#On renomme la colonne _id
names(contrat)[1] = "nomContrat"
#barplot contrats
p<-ggplot(data=contrat, aes(x=nomContrat, y=nbContrats, fill = nomContrat)) +
geom_bar(stat = "identity", width = 0.8)+
geom_text(aes(label=nbContrats), vjust=-0.3, size=3.5)+
theme_minimal()
p
#--------------------------- Pie chart expérience demandée sur les offres
exp = myco$aggregate('[{"$project": {"_id" :0, "experienceExige": 1}},{"$group" : {"_id":"$experienceExige", "nbExpExigee" : {"$sum" : 1}}}]')
names(exp)[1] = "expExigee"
exp$expExigee = c('Expérience souhaitée', 'Débutants acceptés', 'Expérience exigée')
bp<- ggplot(exp, aes(x="", y=nbExpExigee, fill=expExigee))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
pie <- ggplot(exp, aes(x="", y=nbExpExigee, fill=expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# 100 * exp$nb / expTotal
expPer <- exp %>%
mutate(expExigee = factor(expExigee,
levels = expExigee[length(expExigee):1]),
cumulative = cumsum(nbExpExigee),
midpoint = cumulative - nbExpExigee / 2,
labels = paste0(round((nbExpExigee/ sum(nbExpExigee)) * 100, 1), "%"))
ggplot(expPer, aes(x = "", y = nbExpExigee, fill = expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
labs(x = "", y = "", title = "Répartition expérience demandée \n",
fill = "Légende") +
geom_text(aes(x = 1.2, y = midpoint , label = labels), color="black",
fontface = "bold") + blank_theme +
scale_fill_brewer(palette="Blues")+
theme(axis.text.x=element_blank())
# ------------------------- KPI % d'offres où le salaire n'est pas indiqué
salaire = myco$aggregate('[{"$addFields": {"salaireLib": "$salaire.libelle"}},{"$project": {"_id" :0, "salaireLib": 1}},{"$group" : {"_id":"$salaireLib", "groupe" : {"$sum" : 1}}}]')
names(salaire)[1] = "salaire"
names(salaire)[2] = "nbSal"
salaire2 = myco$aggregate('[{"$addFields": {"salaireLib": "$salaire.libelle"}},{"$project": {"_id" :0, "salaireLib": 1} }]')
nbOffres = sum(salaire$nbSal) # nombre total d'offres
indexNA = which(is.na(salaire$salaire)) # On cherche l'index du décompte de valeurs nulles
noSalaire = salaire$nbSal[indexNA] # Total des offres dont le salaire n'est pas renseigné
perNoSal = round((100 * noSalaire / nbOffres), digits = 0) # Pourcentage
# salaireOK = sum(salaire$nbSal) - noSalaire Offres dont le salaire est indiqué
library(shiny); runApp('TableauBordGlobal.R')
source("graphs_jobs_final.R")
runApp('TableauBordGlobal.R')
runApp()
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
bp<- ggplot(exp, aes(x="", y=nbExpExigee, fill=expExigee))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
pie <- ggplot(exp, aes(x="", y=nbExpExigee, fill=expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
exp = myco$aggregate('[{"$project": {"_id" :0, "experienceExige": 1}},{"$group" : {"_id":"$experienceExige", "nbExpExigee" : {"$sum" : 1}}}]')
names(exp)[1] = "expExigee"
exp$expExigee = c('Expérience souhaitée', 'Débutants acceptés', 'Expérience exigée')
bp<- ggplot(exp, aes(x="", y=nbExpExigee, fill=expExigee))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
pie <- ggplot(exp, aes(x="", y=nbExpExigee, fill=expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
exp = myco$aggregate('[{"$project": {"_id" :0, "experienceExige": 1}},{"$group" : {"_id":"$experienceExige", "nbExpExigee" : {"$sum" : 1}}}]')
names(exp)[1] = "expExigee"
exp$expExigee = c('Expérience souhaitée', 'Débutants acceptés', 'Expérience exigée')
bp<- ggplot(exp, aes(x="", y=nbExpExigee, fill=expExigee))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
pie <- ggplot(exp, aes(x="", y=nbExpExigee, fill=expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# 100 * exp$nb / expTotal
expPer <- exp %>%
mutate(expExigee = factor(expExigee,
levels = expExigee[length(expExigee):1]),
cumulative = cumsum(nbExpExigee),
midpoint = cumulative - nbExpExigee / 2,
labels = paste0(round((nbExpExigee/ sum(nbExpExigee)) * 100, 1), "%"))
camembertContrat = ggplot(expPer, aes(x = "", y = nbExpExigee, fill = expExigee)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
labs(x = "", y = "", title = "Répartition expérience demandée \n",
fill = "Légende") +
geom_text(aes(x = 1.2, y = midpoint , label = labels), color="black",
fontface = "bold") + blank_theme +
scale_fill_brewer(palette="Blues")+
theme(axis.text.x=element_blank())
camembertContrat
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
kpi1 = 85
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
library(shiny)
library(shinydashboard)
setwd("C:/Users/Ga/Documents/GitHub/jobio_grp3")
source("server.R")
source("ui.R")
shinyApp(ui, server)
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
perNoSal
library(shiny)
library(shinydashboard)
setwd("C:/Users/Ga/Documents/GitHub/jobio_grp3")
source("server.R")
source("ui.R")
shinyApp(ui, server)
runApp('TableauBordGlobal.R')
library(shiny)
library(shinydashboard)
setwd("C:/Users/Ga/Documents/GitHub/jobio_grp3")
source("server.R")
source("ui.R")
shinyApp(ui, server)
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
runApp('TableauBordGlobal.R')
